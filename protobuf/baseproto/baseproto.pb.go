// Code generated by protoc-gen-go. DO NOT EDIT.
// source: baseproto.proto

package baseproto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//通信包装
type TransPack struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransPack) Reset()         { *m = TransPack{} }
func (m *TransPack) String() string { return proto.CompactTextString(m) }
func (*TransPack) ProtoMessage()    {}
func (*TransPack) Descriptor() ([]byte, []int) {
	return fileDescriptor_822e52c9a4a56588, []int{0}
}

func (m *TransPack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransPack.Unmarshal(m, b)
}
func (m *TransPack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransPack.Marshal(b, m, deterministic)
}
func (m *TransPack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransPack.Merge(m, src)
}
func (m *TransPack) XXX_Size() int {
	return xxx_messageInfo_TransPack.Size(m)
}
func (m *TransPack) XXX_DiscardUnknown() {
	xxx_messageInfo_TransPack.DiscardUnknown(m)
}

var xxx_messageInfo_TransPack proto.InternalMessageInfo

func (m *TransPack) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TransPack) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TransPack) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

//连接检测
type PingPang struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingPang) Reset()         { *m = PingPang{} }
func (m *PingPang) String() string { return proto.CompactTextString(m) }
func (*PingPang) ProtoMessage()    {}
func (*PingPang) Descriptor() ([]byte, []int) {
	return fileDescriptor_822e52c9a4a56588, []int{1}
}

func (m *PingPang) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingPang.Unmarshal(m, b)
}
func (m *PingPang) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingPang.Marshal(b, m, deterministic)
}
func (m *PingPang) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingPang.Merge(m, src)
}
func (m *PingPang) XXX_Size() int {
	return xxx_messageInfo_PingPang.Size(m)
}
func (m *PingPang) XXX_DiscardUnknown() {
	xxx_messageInfo_PingPang.DiscardUnknown(m)
}

var xxx_messageInfo_PingPang proto.InternalMessageInfo

func (m *PingPang) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*TransPack)(nil), "baseproto.TransPack")
	proto.RegisterType((*PingPang)(nil), "baseproto.PingPang")
}

func init() { proto.RegisterFile("baseproto.proto", fileDescriptor_822e52c9a4a56588) }

var fileDescriptor_822e52c9a4a56588 = []byte{
	// 138 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x4a, 0x2c, 0x4e,
	0x2d, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x03, 0x93, 0x42, 0x9c, 0x70, 0x01, 0x25, 0x57, 0x2e, 0xce,
	0x90, 0xa2, 0xc4, 0xbc, 0xe2, 0x80, 0xc4, 0xe4, 0x6c, 0x21, 0x3e, 0x2e, 0xa6, 0xcc, 0x14, 0x09,
	0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0xa6, 0xcc, 0x14, 0x21, 0x21, 0x2e, 0x96, 0x94, 0xc4, 0x92,
	0x44, 0x09, 0x26, 0x05, 0x46, 0x0d, 0x9e, 0x20, 0x30, 0x5b, 0x48, 0x84, 0x8b, 0x35, 0xb5, 0xa8,
	0x28, 0xbf, 0x48, 0x82, 0x19, 0xac, 0x0c, 0xc2, 0x51, 0xd2, 0xe0, 0xe2, 0x08, 0xc8, 0xcc, 0x4b,
	0x0f, 0x48, 0xcc, 0x4b, 0x17, 0x92, 0xe1, 0xe2, 0x2c, 0xc9, 0xcc, 0x4d, 0x2d, 0x2e, 0x49, 0xcc,
	0x2d, 0x00, 0x1b, 0xc6, 0x1c, 0x84, 0x10, 0x48, 0x62, 0x03, 0xdb, 0x6b, 0x0c, 0x08, 0x00, 0x00,
	0xff, 0xff, 0xf9, 0xc6, 0xa2, 0xc1, 0x95, 0x00, 0x00, 0x00,
}
